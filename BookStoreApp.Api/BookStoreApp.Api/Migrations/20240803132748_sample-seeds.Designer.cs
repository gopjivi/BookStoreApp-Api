// <auto-generated />
using System;
using BookStoreApp.Api.DbContexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BookStoreApp.Api.Migrations
{
    [DbContext(typeof(BookStoreDbContext))]
    [Migration("20240803132748_sample-seeds")]
    partial class sampleseeds
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BookStoreApp.Api.Models.Author", b =>
                {
                    b.Property<int>("AuthorID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("author_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AuthorID"));

                    b.Property<string>("Biography")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)")
                        .HasColumnName("biography");

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("display_name");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("name");

                    b.HasKey("AuthorID");

                    b.HasIndex("DisplayName")
                        .IsUnique();

                    b.ToTable("Authors");

                    b.HasData(
                        new
                        {
                            AuthorID = 1,
                            Biography = "Jane Austen was an English novelist known primarily for her six major novels...",
                            DisplayName = "Jane Austen",
                            Name = "Jane Austen"
                        });
                });

            modelBuilder.Entity("BookStoreApp.Api.Models.Book", b =>
                {
                    b.Property<int>("BookID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("book_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BookID"));

                    b.Property<int>("AuthorID")
                        .HasColumnType("int")
                        .HasColumnName("author_id");

                    b.Property<byte[]>("BookImage")
                        .HasColumnType("varbinary(max)")
                        .HasColumnName("book_image");

                    b.Property<string>("Edition")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("edition");

                    b.Property<int>("GenreID")
                        .HasColumnType("int")
                        .HasColumnName("genre_id");

                    b.Property<bool>("IsOfferAvailable")
                        .HasColumnType("bit")
                        .HasColumnName("is_offer_available");

                    b.Property<int>("LanguageID")
                        .HasColumnType("int")
                        .HasColumnName("language_id");

                    b.Property<float>("Price")
                        .HasColumnType("real")
                        .HasColumnName("price");

                    b.Property<DateTime>("PublicationDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("publication_date");

                    b.Property<int>("StockQuantity")
                        .HasColumnType("int")
                        .HasColumnName("stock_quantity");

                    b.Property<string>("StorageSection")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("storage_section");

                    b.Property<string>("StorageShelf")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("storage_shelf");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("title");

                    b.HasKey("BookID");

                    b.HasIndex("AuthorID");

                    b.HasIndex("GenreID");

                    b.HasIndex("LanguageID");

                    b.ToTable("Books");

                    b.HasData(
                        new
                        {
                            BookID = 1,
                            AuthorID = 1,
                            Edition = "",
                            GenreID = 1,
                            IsOfferAvailable = false,
                            LanguageID = 1,
                            Price = 100f,
                            PublicationDate = new DateTime(2005, 4, 23, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            StockQuantity = 50,
                            StorageSection = "Tamil-Fiction",
                            StorageShelf = "",
                            Title = "Sample Book"
                        });
                });

            modelBuilder.Entity("BookStoreApp.Api.Models.Genre", b =>
                {
                    b.Property<int>("GenreID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("genre_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GenreID"));

                    b.Property<string>("GenreName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("genre_name");

                    b.HasKey("GenreID");

                    b.HasIndex("GenreName")
                        .IsUnique();

                    b.ToTable("Genres");

                    b.HasData(
                        new
                        {
                            GenreID = 1,
                            GenreName = "Fantasy"
                        });
                });

            modelBuilder.Entity("BookStoreApp.Api.Models.Language", b =>
                {
                    b.Property<int>("LanguageID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("language_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LanguageID"));

                    b.Property<string>("LanguageName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("language_name");

                    b.HasKey("LanguageID");

                    b.HasIndex("LanguageName")
                        .IsUnique();

                    b.ToTable("Languages");

                    b.HasData(
                        new
                        {
                            LanguageID = 1,
                            LanguageName = "Tamil"
                        },
                        new
                        {
                            LanguageID = 2,
                            LanguageName = "English"
                        },
                        new
                        {
                            LanguageID = 3,
                            LanguageName = "Kannada"
                        },
                        new
                        {
                            LanguageID = 4,
                            LanguageName = "Malayalam"
                        },
                        new
                        {
                            LanguageID = 5,
                            LanguageName = "Hindi"
                        },
                        new
                        {
                            LanguageID = 6,
                            LanguageName = "Telugu"
                        },
                        new
                        {
                            LanguageID = 7,
                            LanguageName = "Urdu"
                        },
                        new
                        {
                            LanguageID = 8,
                            LanguageName = "Punjabi"
                        },
                        new
                        {
                            LanguageID = 9,
                            LanguageName = "Marathi"
                        },
                        new
                        {
                            LanguageID = 10,
                            LanguageName = "Bengali"
                        });
                });

            modelBuilder.Entity("BookStoreApp.Api.Models.Book", b =>
                {
                    b.HasOne("BookStoreApp.Api.Models.Author", "Author")
                        .WithMany("Books")
                        .HasForeignKey("AuthorID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BookStoreApp.Api.Models.Genre", "Genre")
                        .WithMany("Books")
                        .HasForeignKey("GenreID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BookStoreApp.Api.Models.Language", "Language")
                        .WithMany("Books")
                        .HasForeignKey("LanguageID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Author");

                    b.Navigation("Genre");

                    b.Navigation("Language");
                });

            modelBuilder.Entity("BookStoreApp.Api.Models.Author", b =>
                {
                    b.Navigation("Books");
                });

            modelBuilder.Entity("BookStoreApp.Api.Models.Genre", b =>
                {
                    b.Navigation("Books");
                });

            modelBuilder.Entity("BookStoreApp.Api.Models.Language", b =>
                {
                    b.Navigation("Books");
                });
#pragma warning restore 612, 618
        }
    }
}
